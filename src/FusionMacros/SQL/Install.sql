

INSERT INTO USER_RIGHT_TABLE (NAME, CATEGORY, RIGHT_TYPE, RIGHT, IDX, COMMENTS) VALUES ('FusionScript: Execute Scripts', 'SDK Rights', 2, -1, (SELECT NVL(MAX(IDX), 0)+1 FROM USER_RIGHT_TABLE), 'The right to execute private or firm scripts');  
INSERT INTO USER_RIGHT_TABLE (NAME, CATEGORY, RIGHT_TYPE, RIGHT, IDX, COMMENTS) VALUES ('FusionScript: Manage Private Scripts', 'SDK Rights', 2, -1, (SELECT NVL(MAX(IDX), 0)+1 FROM USER_RIGHT_TABLE), 'The right to edit private scripts'); 
INSERT INTO USER_RIGHT_TABLE (NAME, CATEGORY, RIGHT_TYPE, RIGHT, IDX, COMMENTS) VALUES ('FusionScript: Manage Firm Scripts', 'SDK Rights', 2, -1, (SELECT NVL(MAX(IDX), 0)+1 FROM USER_RIGHT_TABLE), 'The right to edit private and firm scripts'); 
INSERT INTO USER_RIGHT_TABLE (NAME, CATEGORY, RIGHT_TYPE, RIGHT, IDX, COMMENTS) VALUES ('FusionScript: Full Toolkit Access', 'SDK Rights', 2, -1, (SELECT NVL(MAX(IDX), 0)+1 FROM USER_RIGHT_TABLE), 'The user can make full use of the .net Toolkit as well as the Scripting library'); 

CREATE TABLE RXD_AUDIT_SCRIPT 
(	
	"ID" NUMBER(10,0) NOT NULL ENABLE, 
	"NAME" VARCHAR2(255 BYTE), 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"SCRIPT" CLOB, 
	"OWNERID" NUMBER(10,0), 
	"LANGUAGE" NUMBER(10,0), 
	"SECURITYPERMISSION" NUMBER(10,0), 
	"ICON" VARCHAR(255 BYTE) NULL,
	"USERID" NUMBER NOT NULL ENABLE, 
	"DATE_MODIF" DATE NOT NULL ENABLE, 
	"VERSION" NUMBER(3,0) NOT NULL ENABLE, 
	"MODIF" NUMBER(1,0) NOT NULL ENABLE
);

CREATE TABLE "RXD_AUDIT_SCRIPT_TRIGGER" 
(	
	"ID" NUMBER(10,0) NOT NULL ENABLE, 
	"TRIGGERID" NUMBER(10,0), 
	"SCRIPTID" NUMBER(10,0), 
	"TIME" DATE, 
	"USERID" NUMBER NOT NULL ENABLE, 
	"DATE_MODIF" DATE NOT NULL ENABLE, 
	"VERSION" NUMBER(3,0) NOT NULL ENABLE, 
	"MODIF" NUMBER(1,0) NOT NULL ENABLE
);

CREATE TABLE "RXD_SCRIPT" 
(	
	"ID" NUMBER(10,0) NOT NULL ENABLE, 
	"NAME" VARCHAR2(255 BYTE) NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"SCRIPT" CLOB NOT NULL ENABLE, 
	"OWNERID" NUMBER(10,0) NOT NULL ENABLE, 
	"LANGUAGE" NUMBER(10,0) NOT NULL ENABLE, 
	"SECURITYPERMISSION" NUMBER(10,0) NOT NULL ENABLE, 
	"ICON" VARCHAR(255 BYTE) NULL,
	CONSTRAINT "RXD_SCRIPT_PK" PRIMARY KEY ("ID")
);

CREATE UNIQUE INDEX "RXD_SCRIPT_UX" ON "RXD_SCRIPT" ("NAME");

CREATE OR REPLACE TRIGGER "RXD_AUDIT_SCRIPT" 
after delete or insert or update on RXD_SCRIPT
for each row 
begin

   if deleting then
      begin
      insert into RXD_AUDIT_SCRIPT
      (MODIF, USERID, DATE_MODIF, VERSION, ID, NAME, DESCRIPTION, SCRIPT, OWNERID, LANGUAGE, SECURITYPERMISSION, ICON)
      values (3, GETUSERID(), sysdate, (select nvl(max(version), 0)+1 from RXD_AUDIT_SCRIPT WHERE ID = :old.ID),
      :old.ID, :old.NAME, :old.DESCRIPTION, :old.SCRIPT, :old.OWNERID, :old.LANGUAGE, :old.SECURITYPERMISSION, :old.ICON);
      end;
   elsif inserting then
      begin
      insert into RXD_AUDIT_SCRIPT
      (MODIF, USERID, DATE_MODIF, VERSION, ID, NAME, DESCRIPTION, SCRIPT, OWNERID, LANGUAGE, SECURITYPERMISSION, ICON)
      values (1, GETUSERID(), sysdate, 0,
      :new.ID, :new.NAME, :new.DESCRIPTION, :new.SCRIPT, :new.OWNERID, :new.LANGUAGE, :new.SECURITYPERMISSION, :new.ICON);
      end;
   elsif updating then
      begin
      insert into RXD_AUDIT_SCRIPT
      (MODIF, USERID, DATE_MODIF, VERSION, ID, NAME, DESCRIPTION, SCRIPT, OWNERID, LANGUAGE, SECURITYPERMISSION, ICON)
      values (2, GETUSERID(), sysdate, (select nvl(max(version), 0)+1 from RXD_AUDIT_SCRIPT WHERE ID = :old.ID),
      :old.ID, :old.NAME, :old.DESCRIPTION, :old.SCRIPT, :old.OWNERID, :old.LANGUAGE, :old.SECURITYPERMISSION, :old.ICON);
      end;
  end if;
end;
/

ALTER TRIGGER "RXD_AUDIT_SCRIPT" ENABLE;

CREATE TABLE "RXD_SCRIPT_EXECUTION" 
(	
	"SCRIPTID" NUMBER NOT NULL ENABLE, 
	"STARTEDAT" DATE NOT NULL ENABLE, 
	"TRIGGERID" NUMBER NOT NULL ENABLE, 
	"RESULTS" CLOB, 
	"ID" NUMBER NOT NULL ENABLE, 
	"ENDEDAT" DATE NOT NULL ENABLE, 
	"STATUS" NUMBER(*,0) NOT NULL ENABLE
);

CREATE TABLE "RXD_SCRIPT_TRIGGER" 
(	
	"ID" NUMBER(10,0) NOT NULL ENABLE, 
	"TRIGGERID" NUMBER(10,0) NOT NULL ENABLE, 
	"SCRIPTID" NUMBER(10,0) NOT NULL ENABLE, 
	"TIME" DATE, 
	CONSTRAINT "RXD_SCRIPT_TRIGGER_FK" FOREIGN KEY ("SCRIPTID")
	REFERENCES "RXD_SCRIPT" ("ID") ENABLE
);

COMMENT ON COLUMN "RXD_SCRIPT_TRIGGER"."TIME" IS 'Used for TriggerID = 2';

CREATE OR REPLACE TRIGGER RXD_AUDIT_SCRIPT_TRIGGER
after delete or insert or update on RXD_SCRIPT_TRIGGER 
for each row 
begin

   if deleting then
      begin
      insert into RXD_AUDIT_SCRIPT_TRIGGER
      (MODIF, USERID, DATE_MODIF, VERSION, ID, TRIGGERID, SCRIPTID, TIME)
      values (3, GETUSERID(), sysdate, (select nvl(max(version), 0)+1 from RXD_AUDIT_SCRIPT_TRIGGER WHERE ID = :old.ID),
      :old.ID, :old.TRIGGERID, :old.SCRIPTID, :old.TIME);
      end;
   elsif inserting then
      begin
      insert into RXD_AUDIT_SCRIPT_TRIGGER
      (MODIF, USERID, DATE_MODIF, VERSION, ID, TRIGGERID, SCRIPTID, TIME)
      values (1, GETUSERID(), sysdate, 0,
      :new.ID, :new.TRIGGERID, :new.SCRIPTID, :new.TIME);
      end;
   elsif updating then
      begin
      insert into RXD_AUDIT_SCRIPT_TRIGGER
      (MODIF, USERID, DATE_MODIF, VERSION, ID, TRIGGERID, SCRIPTID, TIME)
      values (2, GETUSERID(), sysdate, (select nvl(max(version), 0)+1 from RXD_AUDIT_SCRIPT_TRIGGER WHERE ID = :old.ID),
      :old.ID, :old.TRIGGERID, :old.SCRIPTID, :old.TIME);
      end;
  end if;
end;
/
ALTER TRIGGER "RXD_AUDIT_SCRIPT_TRIGGER" ENABLE;

CREATE SEQUENCE  "RXD_SCRIPT_EXECUTION_ID"  START WITH 1;
CREATE SEQUENCE  "RXD_SCRIPT_ID" START WITH 1;
CREATE SEQUENCE  "RXD_SCRIPT_TRIGGER_ID"  START WITH 1;
